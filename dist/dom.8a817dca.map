{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","find","selector","scope","querySelectorAll","style","name","value","arguments","length","object","key","each","nodeList","fn","i","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AACTC,UADS,kBACFC,MADE,EACM;AACX,YAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB,CADW,CAC2C;;AAEtDF,kBAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB;AACA,eAAOJ,UAAUK,OAAV,CAAkBC,UAAzB;AACH,KANQ;AAQTC,SARS,iBAQHC,IARG,EAQGC,KARH,EAQU;AACfD,aAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,KAAKI,WAAzC;AACH,KAVQ;AAYTC,UAZS,kBAYFL,IAZE,EAYIC,KAZJ,EAYW;AAChBD,aAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,IAApC;AACH,KAdQ;AAgBTM,UAhBS,kBAgBFC,MAhBE,EAgBMP,IAhBN,EAgBY;AACjBO,eAAOC,WAAP,CAAmBR,IAAnB;AACH,KAlBQ;AAoBTS,QApBS,gBAoBJT,IApBI,EAoBEO,MApBF,EAoBU;AACflB,YAAIgB,MAAJ,CAAWL,KAAKO,MAAhB;AACAlB,YAAIiB,MAAJ,CAAWC,MAAX,EAAmBP,IAAnB;AACH,KAvBQ;AAyBTU,UAzBS,kBAyBFV,IAzBE,EAyBI;AACTA,aAAKE,UAAL,CAAgBS,WAAhB,CAA4BX,IAA5B;AACA,eAAOA,IAAP;AACH,KA5BQ;AA8BTY,SA9BS,iBA8BHZ,IA9BG,EA8BG;AAAA,YACDa,UADC,GACab,IADb,CACDa,UADC;;AAER,YAAMC,QAAQ,EAAd;AACA,YAAIC,IAAIf,KAAKF,UAAb;AACA,eAAMiB,CAAN,EAAS;AACLD,kBAAME,IAAN,CAAW3B,IAAIqB,MAAJ,CAAWV,KAAKF,UAAhB,CAAX;AACAiB,gBAAIf,KAAKF,UAAT;AACH;AACJ,KAtCQ;AAwCTmB,QAxCS,gBAwCJC,QAxCI,EAwCMC,KAxCN,EAwCa;AAClB,eAAO,CAACA,SAAS1B,QAAV,EAAoB2B,gBAApB,CAAqCF,QAArC,CAAP;AACH,KA1CQ;AA4CTG,SA5CS,iBA4CHrB,IA5CG,EA4CGsB,IA5CH,EA4CSC,KA5CT,EA4CgB;AACrB,YAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AACxB;AACAzB,iBAAKqB,KAAL,CAAWC,IAAX,IAAmBC,KAAnB;AACH,SAHD,MAIK,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC7B,gBAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACAtB,qBAAKqB,KAAL,CAAWC,IAAX,IAAmBC,KAAnB;AACH,aAHD,MAGO,IAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAApB,EAA8B;AACjC;AACA,oBAAMI,SAASJ,IAAf;AACA,qBAAK,IAAIK,GAAT,IAAgBD,MAAhB,EAAwB;AACpB1B,yBAAKqB,KAAL,CAAWM,GAAX,IAAkBD,OAAOC,GAAP,CAAlB;AACH;AACJ;AACJ;AACJ,KA7DQ;AA+DTC,QA/DS,gBA+DJC,QA/DI,EA+DMC,EA/DN,EA+DS;AACd,aAAI,IAAIC,IAAE,CAAV,EAAYA,IAAEF,SAASJ,MAAvB,EAA8BM,GAA9B,EAAkC;AAChCD,eAAGE,IAAH,CAAQ,IAAR,EAAcH,SAASE,CAAT,CAAd;AACD;AACJ;AAnEQ,CAAb","file":"dom.8a817dca.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n    create(string) {\n        const container = document.createElement(\"template\"); // template can be the conatainer of any tag\n        \n        container.innerHTML = string.trim();\n        return container.content.firstChild\n    },\n\n    after(node, node2) {\n        node.parentNode.insertBefore(node2, node.nextSibling);\n    },\n\n    before(node, node2) {\n        node.parentNode.insertBefore(node2, node);\n    },\n\n    append(parent, node) {  \n        parent.appendChild(node)\n    },\n\n    wrap(node, parent) {\n        dom.before(node.parent)\n        dom.append(parent, node)\n    },\n\n    remove(node) {\n        node.parentNode.removeChild(node)\n        return node\n    },\n\n    empty(node) {\n        const {childNodes} = node\n        const array = []\n        let x = node.firstChild\n        while(x) {\n            array.push(dom.remove(node.firstChild))\n            x = node.firstChild\n        }\n    },\n\n    find(selector, scope) {\n        return (scope || document).querySelectorAll(selector)\n    },\n\n    style(node, name, value) {\n        if (arguments.length === 3) {\n            // dom.style(div, 'color', 'red')\n            node.style[name] = value\n        }\n        else if (arguments.length === 2) {\n            if (typeof name === 'string') {\n                // dom.style(div, 'color')\n                node.style[name] = value\n            } else if (typeof name === 'object') {\n                // dom.style(div, {color: red})\n                const object = name\n                for (let key in object) {\n                    node.style[key] = object[key]\n                }\n            }\n        }\n    },\n    \n    each(nodeList, fn){\n        for(let i=0;i<nodeList.length;i++){\n          fn.call(null, nodeList[i])\n        }\n    },\n};\n\n\n"]}